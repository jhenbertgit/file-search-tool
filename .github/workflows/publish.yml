name: Build and Release

on:
  push:
    tags: ["v*"]
  workflow_dispatch:
    inputs:
      platform:
        description: "Platform to build for"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - windows
          - macos
          - linux

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            name: windows
          - os: macos-latest
            platform: darwin
            arch: x64
            name: macos
          - os: ubuntu-latest
            platform: linux
            arch: x64
            name: linux

    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name == 'push' || github.event.inputs.platform == 'all' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install system dependencies (Linux)
        if: (github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name) && matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm-dev libxcomposite-dev libxdamage-dev libxrandr-dev libgbm-dev libxss1 libasound2-dev

      - name: Install dependencies
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        run: pnpm install --frozen-lockfile

      - name: Run tests
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        run: pnpm test

      - name: Run linting
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        run: pnpm run lint

      - name: Build application
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        run: pnpm run build

      - name: Package application
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        run: |
          if [ "${{ matrix.name }}" = "macos" ]; then
            pnpm run package:mac
          elif [ "${{ matrix.name }}" = "windows" ]; then
            pnpm run package:win
          else
            pnpm run package:${{ matrix.name }}
          fi

      - name: Create installer/package
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        run: |
          if [ "${{ matrix.name }}" = "macos" ]; then
            pnpm run make:mac
          elif [ "${{ matrix.name }}" = "windows" ]; then
            pnpm run make:win
          else
            pnpm run make:${{ matrix.name }}
          fi

      - name: Upload artifacts
        if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-release-assets
          path: |
            out/make/**/*
            out/**/File*Search*
          retention-days: 7

      - name: Publish to GitHub Releases
        if: (github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == matrix.name) && startsWith(github.ref, 'refs/tags/')
        run: |
          if [ "${{ matrix.name }}" = "macos" ]; then
            pnpm run publish:mac
          elif [ "${{ matrix.name }}" = "windows" ]; then
            pnpm run publish:win
          else
            pnpm run publish:${{ matrix.name }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
